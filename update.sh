#!/bin/bash

###############################################################################
# ОБНОВЛЕНИЕ zakaz.sneaker-head.by из GitHub
# Запускать каждый раз когда нужно обновить сайт
###############################################################################

set -e

echo "════════════════════════════════════════════════════════"
echo "  🔄 ОБНОВЛЕНИЕ zakaz.sneaker-head.by"
echo "════════════════════════════════════════════════════════"
echo ""

# Проверка что мы в правильной директории
if [ ! -f "composer.json" ]; then
    echo "❌ Ошибка: запустите скрипт из корневой папки проекта"
    exit 1
fi

echo "📂 Текущая директория: $(pwd)"
echo ""

# ═══════════════════════════════════════════════════════════
echo "⬇️  ШАГ 1: Подтягивание изменений из GitHub"
echo "════════════════════════════════════════════════════════"

# Проверяем статус репозитория
if ! git diff-index --quiet HEAD --; then
    echo "⚠️  Обнаружены локальные изменения"
    echo "📦 Сохраняем локальные изменения..."
    git stash save "Auto-stash before update $(date '+%Y-%m-%d %H:%M:%S')"
fi

# Получаем изменения из GitHub
git fetch origin main

# Проверяем наличие обновлений
UPSTREAM=${1:-'@{u}'}
LOCAL=$(git rev-parse @)
REMOTE=$(git rev-parse "$UPSTREAM")

if [ $LOCAL = $REMOTE ]; then
    echo "✅ Изменений нет. Уже актуальная версия."
else
    echo "📥 Найдены новые изменения. Подтягиваем..."
    
    # Сбрасываем на удаленную версию (force update)
    git reset --hard origin/main
    
    echo "✅ Код обновлен до последней версии"
fi

echo ""

# ═══════════════════════════════════════════════════════════
echo "📦 ШАГ 2: Обновление зависимостей"
echo "════════════════════════════════════════════════════════"

if command -v composer &> /dev/null; then
    composer install --no-dev --optimize-autoloader
elif [ -f "composer.phar" ]; then
    php composer.phar install --no-dev --optimize-autoloader
else
    echo "⚠️  Composer не найден, пропускаем..."
fi

echo "✅ Зависимости обновлены"
echo ""

# ═══════════════════════════════════════════════════════════
echo "🗄️  ШАГ 3: Проверка миграций"
echo "════════════════════════════════════════════════════════"

php yii migrate --interactive=0

echo "✅ Миграции применены"
echo ""

# ═══════════════════════════════════════════════════════════
echo "🧹 ШАГ 4: Очистка кэша"
echo "════════════════════════════════════════════════════════"

rm -rf runtime/cache/*
rm -rf web/assets/*

echo "✅ Кэш очищен"
echo ""

# ═══════════════════════════════════════════════════════════
echo "════════════════════════════════════════════════════════"
echo "  ✅ ОБНОВЛЕНИЕ ЗАВЕРШЕНО!"
echo "════════════════════════════════════════════════════════"
echo ""
echo "🌐 Сайт: http://zakaz.sneaker-head.by"
echo "🕐 Время: $(date '+%Y-%m-%d %H:%M:%S')"
echo ""
